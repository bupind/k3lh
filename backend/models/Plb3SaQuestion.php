<?php

namespace backend\models;

use common\vendor\AppConstants;
use common\vendor\AppLabels;

/**
 * This is the model class for table "plb3_sa_question".
 *
 * @property integer $id
 * @property string $category_code
 * @property string $input_type_code
 * @property string $label
 * @property string $is_question
 * @property integer $parent_id
 * @property integer $created_by
 * @property integer $created_at
 * @property integer $updated_by
 * @property integer $updated_at
 *
 * @property Plb3SaQuestion $parent
 * @property Plb3SaQuestion[] $plb3SaQuestions
 * @property Plb3SaSubQuestion[] $plb3SaSubQuestions
 * @property Plb3SaFormDetail[] $plb3SaFormDetails
 */
class Plb3SaQuestion extends AppModel {
    
    public $category_code_desc;
    public $input_type_code_desc;
    public $label_short;
    public $label_clean;
    
    /**
     * @inheritdoc
     */
    public static function tableName() {
        return 'plb3_sa_question';
    }
    
    /**
     * @inheritdoc
     */
    public function rules() {
        return [
            [['category_code'], 'required', 'message' => AppConstants::VALIDATE_REQUIRED],
            [['label'], 'string'],
            [['parent_id'], 'integer', 'message' => AppConstants::VALIDATE_INTEGER],
            [['category_code', 'input_type_code'], 'string', 'max' => 10],
            [['is_question'], 'string', 'max' => 1],
            [['parent_id'], 'exist', 'skipOnError' => true, 'targetClass' => Plb3SaQuestion::className(), 'targetAttribute' => ['parent_id' => 'id']],
        ];
    }
    
    /**
     * @inheritdoc
     */
    public function attributeLabels() {
        return [
            'id' => 'ID',
            'category_code' => AppLabels::CATEGORY,
            'category_code_desc' => AppLabels::CATEGORY,
            'input_type_code' => AppLabels::TYPE,
            'input_type_code_desc' => AppLabels::TYPE,
            'label' => AppLabels::LABEL,
            'label_short' => AppLabels::LABEL,
            'is_question' => AppLabels::IS_QUESTION,
            'parent_id' => AppLabels::PARENT,
        ];
    }
    
    public function afterFind() {
        parent::afterFind(); // TODO: Change the autogenerated stub
        $this->category_code_desc = Codeset::getCodesetValue(AppConstants::CODESET_PLB3_SA_QUESTION_CATEGORY_CODE, $this->category_code);
        $this->input_type_code_desc = Codeset::getCodesetValue(AppConstants::CODESET_PLB3_SA_QUESTION_INPUT_TYPE_CODE, $this->input_type_code);
        $this->label_clean = strip_tags($this->label);
        $this->label_short = strlen($this->label_clean) > 50 ? substr($this->label_clean, 0, 50) : $this->label_clean;
    }
    
    /**
     * @return \yii\db\ActiveQuery
     */
    public function getParent() {
        return $this->hasOne(Plb3SaQuestion::className(), ['id' => 'parent_id']);
    }
    
    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPlb3SaQuestions() {
        return $this->hasMany(Plb3SaQuestion::className(), ['parent_id' => 'id']);
    }
    
    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPlb3SaSubQuestions() {
        return $this->hasMany(Plb3SaSubQuestion::className(), ['plb3_sa_question_id' => 'id']);
    }
    
    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPlb3SaFormDetails() {
        return $this->hasMany(Plb3SaFormDetail::className(), ['plb3_sa_question_id' => 'id']);
    }
    
    public function getChild() {
        return Plb3SaQuestion::find()->where(['parent_id' => $this->id])->all();
    }
}
